/*
OverlappingMarkerSpiderfier
https://github.com/jawj/OverlappingMarkerSpiderfier
Copyright (c) 2011 - 2012 George MacKerron
Released under the MIT licence: http://opensource.org/licenses/mit-license

Modified to put markers in a line instead of circle or spiral

Note: The Google Maps API v3 must be included *before* this code
*/
(function(){var w,x={}.hasOwnProperty,y=[].slice;null!=(null!=(w=this.google)?w.maps:void 0)&&(this.OverlappingMarkerSpiderfier=function(){function t(b,c){var a,e,g,f,d=this;this.map=b;null==c&&(c={});for(a in c)x.call(c,a)&&(e=c[a],this[a]=e);this.projHelper=new this.constructor.ProjHelper(this.map);this.initMarkerArrays();this.listeners={};f=["click","zoom_changed","maptypeid_changed"];e=0;for(g=f.length;e<g;e++)a=f[e],p.addListener(this.map,a,function(){return d.unspiderfy()})}var p,r,h,q,n,d,
v;d=t.prototype;v=[t,d];h=0;for(q=v.length;h<q;h++)n=v[h],n.VERSION="0.3.3";r=google.maps;p=r.event;n=r.MapTypeId;h=2*Math.PI;d.keepSpiderfied=!1;d.markersWontHide=!1;d.markersWontMove=!1;d.nearbyDistance=10;d.circleSpiralSwitchover=999;d.circleFootSeparation=23;d.circleStartAngle=h/12;d.spiderfiedZIndex=1E3;d.usualLegZIndex=10;d.highlightedLegZIndex=20;d.legWeight=1;d.legColors={usual:{},highlighted:{}};q=d.legColors.usual;h=d.legColors.highlighted;q[n.HYBRID]=q[n.SATELLITE]="#fff";h[n.HYBRID]=h[n.SATELLITE]=
"#f00";q[n.TERRAIN]=q[n.ROADMAP]="#444";h[n.TERRAIN]=h[n.ROADMAP]="#f00";d.initMarkerArrays=function(){this.markers=[];return this.markerListenerRefs=[]};d.addMarker=function(b){var c,a=this;if(null!=b._oms)return this;b._oms=!0;c=[p.addListener(b,"click",function(c){return a.spiderListener(b,c)})];this.markersWontHide||c.push(p.addListener(b,"visible_changed",function(){return a.markerChangeListener(b,!1)}));this.markersWontMove||c.push(p.addListener(b,"position_changed",function(){return a.markerChangeListener(b,
!0)}));this.markerListenerRefs.push(c);this.markers.push(b);return this};d.markerChangeListener=function(b,c){if(null!=b._omsData&&(c||!b.getVisible())&&null==this.spiderfying&&null==this.unspiderfying)return this.unspiderfy(c?b:null)};d.getMarkers=function(){return this.markers.slice(0)};d.removeMarker=function(b){var c,a,e,g,f;null!=b._omsData&&this.unspiderfy();c=this.arrIndexOf(this.markers,b);if(0>c)return this;e=this.markerListenerRefs.splice(c,1)[0];g=0;for(f=e.length;g<f;g++)a=e[g],p.removeListener(a);
delete b._oms;this.markers.splice(c,1);return this};d.clearMarkers=function(){var b,c,a,e,g,f,d,l;this.unspiderfy();l=this.markers;b=e=0;for(f=l.length;e<f;b=++e){a=l[b];c=this.markerListenerRefs[b];g=0;for(d=c.length;g<d;g++)b=c[g],p.removeListener(b);delete a._oms}this.initMarkerArrays();return this};d.addListener=function(b,c){var a,e;(null!=(e=(a=this.listeners)[b])?e:a[b]=[]).push(c);return this};d.removeListener=function(b,c){var a;a=this.arrIndexOf(this.listeners[b],c);0>a||this.listeners[b].splice(a,
1);return this};d.clearListeners=function(b){this.listeners[b]=[];return this};d.trigger=function(){var b,c,a,e,g,f;c=arguments[0];b=2<=arguments.length?y.call(arguments,1):[];c=null!=(a=this.listeners[c])?a:[];f=[];e=0;for(g=c.length;e<g;e++)a=c[e],f.push(a.apply(null,b));return f};d.generatePtsCircle=function(b,c){var a,e,g;a=-22;g=[];for(e=0;0<=b?e<b:e>b;0<=b?++e:--e)a+=22,g.push(new r.Point(c.x+a,c.y-a));return g};d.spiderListener=function(b,c){var a,e,g,f,d,l,k,u,m;(f=null!=b._omsData)&&this.keepSpiderfied||
this.unspiderfy();if(f||this.map.getStreetView().getVisible()||"GoogleEarthAPI"===this.map.getMapTypeId())return this.trigger("click",b,c);f=[];d=[];a=this.nearbyDistance;l=a*a;g=this.llToPt(b.position);m=this.markers;k=0;for(u=m.length;k<u;k++)a=m[k],null!=a.map&&a.getVisible()&&(e=this.llToPt(a.position),this.ptDistanceSq(e,g)<l?f.push({marker:a,markerPt:e}):d.push(a));return 1===f.length?this.trigger("click",b,c):this.spiderfy(f,d)};d.markersNearMarker=function(b,c){var a,e,g,f,d,l,k,u,m,p;null==
c&&(c=!1);if(null==this.projHelper.getProjection())throw"Must wait for 'idle' event on map before calling markersNearMarker";a=this.nearbyDistance;d=a*a;g=this.llToPt(b.position);f=[];u=this.markers;l=0;for(k=u.length;l<k&&!(a=u[l],a!==b&&null!=a.map&&a.getVisible()&&(e=this.llToPt(null!=(m=null!=(p=a._omsData)?p.usualPosition:void 0)?m:a.position),this.ptDistanceSq(e,g)<d&&(f.push(a),c)));l++);return f};d.markersNearAnyOtherMarker=function(){var b,c,a,e,g,f,d,l,k,p,m,h;if(null==this.projHelper.getProjection())throw"Must wait for 'idle' event on map before calling markersNearAnyOtherMarker";
f=this.nearbyDistance;b=f*f;e=this.markers;f=[];m=0;for(a=e.length;m<a;m++)c=e[m],f.push({pt:this.llToPt(null!=(d=null!=(k=c._omsData)?k.usualPosition:void 0)?d:c.position),willSpiderfy:!1});m=this.markers;c=d=0;for(k=m.length;d<k;c=++d)if(a=m[c],null!=a.map&&a.getVisible()&&(e=f[c],!e.willSpiderfy))for(h=this.markers,a=l=0,p=h.length;l<p;a=++l)if(g=h[a],a!==c&&null!=g.map&&g.getVisible()&&(g=f[a],(!(a<c)||g.willSpiderfy)&&this.ptDistanceSq(e.pt,g.pt)<b)){e.willSpiderfy=g.willSpiderfy=!0;break}m=
this.markers;a=[];b=d=0;for(k=m.length;d<k;b=++d)c=m[b],f[b].willSpiderfy&&a.push(c);return a};d.makeHighlightListenerFuncs=function(b){var c=this;return{highlight:function(){return b._omsData.leg.setOptions({strokeColor:c.legColors.highlighted[c.map.mapTypeId],zIndex:c.highlightedLegZIndex})},unhighlight:function(){return b._omsData.leg.setOptions({strokeColor:c.legColors.usual[c.map.mapTypeId],zIndex:c.usualLegZIndex})}}};d.spiderfy=function(b,c){var a,e,d,f,h,l,k,n,m,q;this.spiderfying=!0;q=b.length;
a=this.ptAverage(function(){var a,c,e;e=[];a=0;for(c=b.length;a<c;a++)n=b[a],e.push(n.markerPt);return e}());f=q>=this.circleSpiralSwitchover?this.generatePtsSpiral(q,a).reverse():this.generatePtsCircle(q,a);a=function(){var a,c,n,q=this;n=[];a=0;for(c=f.length;a<c;a++)d=f[a],e=this.ptToLl(d),m=this.minExtract(b,function(a){return q.ptDistanceSq(a.markerPt,d)}),k=m.marker,l=new r.Polyline({map:this.map,path:[k.position,e],strokeColor:this.legColors.usual[this.map.mapTypeId],strokeWeight:this.legWeight,
zIndex:this.usualLegZIndex}),k._omsData={usualPosition:k.position,leg:l},this.legColors.highlighted[this.map.mapTypeId]!==this.legColors.usual[this.map.mapTypeId]&&(h=this.makeHighlightListenerFuncs(k),k._omsData.hightlightListeners={highlight:p.addListener(k,"mouseover",h.highlight),unhighlight:p.addListener(k,"mouseout",h.unhighlight)}),k.setPosition(e),k.setZIndex(Math.round(this.spiderfiedZIndex+d.y)),n.push(k);return n}.call(this);delete this.spiderfying;this.spiderfied=!0;return this.trigger("spiderfy",
a,c)};d.unspiderfy=function(b){var c,a,e,d,f,h,l;null==b&&(b=null);if(null==this.spiderfied)return this;this.unspiderfying=!0;d=[];e=[];l=this.markers;f=0;for(h=l.length;f<h;f++)a=l[f],null!=a._omsData?(a._omsData.leg.setMap(null),a!==b&&a.setPosition(a._omsData.usualPosition),a.setZIndex(null),c=a._omsData.hightlightListeners,null!=c&&(p.removeListener(c.highlight),p.removeListener(c.unhighlight)),delete a._omsData,d.push(a)):e.push(a);delete this.unspiderfying;delete this.spiderfied;this.trigger("unspiderfy",
d,e);return this};d.ptDistanceSq=function(b,c){var a,d;a=b.x-c.x;d=b.y-c.y;return a*a+d*d};d.ptAverage=function(b){var c,a,d,g,f;g=a=d=0;for(f=b.length;g<f;g++)c=b[g],a+=c.x,d+=c.y;b=b.length;return new r.Point(a/b,d/b)};d.llToPt=function(b){return this.projHelper.getProjection().fromLatLngToDivPixel(b)};d.ptToLl=function(b){return this.projHelper.getProjection().fromDivPixelToLatLng(b)};d.minExtract=function(b,c){var a,d,g,f,h,l;g=h=0;for(l=b.length;h<l;g=++h)if(f=b[g],f=c(f),"undefined"===typeof a||
null===a||f<d)d=f,a=g;return b.splice(a,1)[0]};d.arrIndexOf=function(b,c){var a,d,g,f;if(null!=b.indexOf)return b.indexOf(c);a=g=0;for(f=b.length;g<f;a=++g)if(d=b[a],d===c)return a;return-1};t.ProjHelper=function(b){return this.setMap(b)};t.ProjHelper.prototype=new r.OverlayView;t.ProjHelper.prototype.draw=function(){};return t}())}).call(this);