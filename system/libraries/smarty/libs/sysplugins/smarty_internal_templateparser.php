<?php

class TP_yyToken implements ArrayAccess
{
    public $string   = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string)$s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } else if (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[ $offset ]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[ $offset ];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[ $offset ] = $value->metadata;
            }
        } else if ($value) {
            $this->metadata[ $offset ] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[ $offset ]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;

#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
    #line 23 "../smarty/lexer/smarty_internal_templateparser.y"

    const Err1                      = 'Security error: Call to private object member not allowed';
    const Err2                      = 'Security error: Call to dynamic object member not allowed';
    const Err3                      = 'PHP in template not allowed. Use SmartyBC to enable it';
    const TP_VERT                   = 1;
    const TP_COLON                  = 2;
    const TP_UNIMATH                = 3;
    const TP_PHP                    = 4;
    const TP_TEXT                   = 5;
    const TP_STRIPON                = 6;
    const TP_STRIPOFF               = 7;
    const TP_LITERALSTART           = 8;
    const TP_LITERALEND             = 9;
    const TP_LITERAL                = 10;
    const TP_RDEL                   = 11;
    const TP_SIMPELOUTPUT           = 12;
    const TP_LDEL                   = 13;
    const TP_DOLLARID               = 14;
    const TP_EQUAL                  = 15;
    const TP_SIMPLETAG              = 16;
    const TP_ID                     = 17;
    const TP_PTR                    = 18;
    const TP_LDELMAKENOCACHE        = 19;
    const TP_LDELIF                 = 20;
    const TP_LDELFOR                = 21;
    const TP_SEMICOLON              = 22;
    const TP_INCDEC                 = 23;
    const TP_TO                     = 24;
    const TP_STEP                   = 25;
    const TP_LDELFOREACH            = 26;
    const TP_SPACE                  = 27;
    const TP_AS                     = 28;
    const TP_APTR                   = 29;
    const TP_LDELSETFILTER          = 30;
    const TP_SMARTYBLOCKCHILDPARENT = 31;
    const TP_CLOSETAG               = 32;
    const TP_LDELSLASH              = 33;
    const TP_ATTR                   = 34;
    const TP_INTEGER                = 35;
    const TP_COMMA                  = 36;
    const TP_OPENP                  = 37;
    const TP_CLOSEP                 = 38;
    const TP_MATH                   = 39;
    const TP_ISIN                   = 40;
    const TP_QMARK                  = 41;
    const TP_NOT                    = 42;
    const TP_TYPECAST               = 43;
    const TP_HEX                    = 44;
    const TP_DOT                    = 45;
    const TP_INSTANCEOF             = 46;
    const TP_SINGLEQUOTESTRING      = 47;
    const TP_DOUBLECOLON            = 48;
    const TP_NAMESPACE              = 49;
    const TP_AT                     = 50;
    const TP_HATCH                  = 51;
    const TP_OPENB                  = 52;
    const TP_CLOSEB                 = 53;
    const TP_DOLLAR                 = 54;
    const TP_LOGOP                  = 55;
    const TP_SLOGOP                 = 56;
    const TP_TLOGOP                 = 57;
    const TP_SINGLECOND             = 58;
    const TP_QUOTE                  = 59;
    const TP_BACKTICK               = 60;
    const YY_NO_ACTION              = 523;
    const YY_ACCEPT_ACTION          = 522;
    const YY_ERROR_ACTION           = 521;
    const YY_SZ_ACTTAB              = 2143;
    const YY_SHIFT_USE_DFLT         = -23;
    const YY_SHIFT_MAX              = 231;
    const YY_REDUCE_USE_DFLT        = -94;
    const YY_REDUCE_MAX             = 185;
    const YYNOCODE                  = 107;
    const YYSTACKDEPTH              = 500;
    const YYNSTATE                  = 328;
    const YYNRULE                   = 193;
    const YYERRORSYMBOL             = 61;
    const YYERRSYMDT                = 'yy0';
    const YYFALLBACK                = 0;
    static public $yy_action        = array(
        41, 312, 214, 290, 228, 197, 13, 102, 262, 265,
        9, 129, 151, 268, 80, 312, 209, 4, 84, 12,
        260, 25, 263, 114, 78, 259, 15, 213, 273, 261,
        211, 311, 207, 200, 34, 258, 450, 17, 78, 42,
        39, 324, 210, 450, 280, 241, 198, 275, 82, 1,
        41, 291, 225, 195, 92, 119, 79, 107, 212, 265,
        9, 130, 99, 268, 190, 142, 209, 4, 84, 178,
        315, 196, 282, 114, 287, 263, 214, 213, 216, 261,
        211, 102, 201, 181, 34, 103, 179, 245, 255, 42,
        39, 324, 210, 182, 223, 30, 198, 234, 82, 1,
        257, 291, 41, 304, 35, 224, 79, 33, 168, 19,
        96, 265, 9, 132, 348, 268, 204, 437, 209, 4,
        84, 250, 252, 253, 217, 114, 312, 225, 437, 213,
        12, 261, 211, 200, 207, 43, 34, 15, 5, 208,
        111, 42, 39, 324, 210, 291, 280, 310, 198, 78,
        82, 1, 41, 291, 260, 25, 24, 189, 79, 259,
        313, 265, 9, 132, 239, 268, 188, 200, 209, 4,
        84, 40, 38, 200, 22, 114, 37, 96, 314, 213,
        244, 261, 211, 350, 203, 295, 34, 294, 296, 297,
        298, 42, 39, 324, 210, 29, 280, 291, 198, 12,
        82, 1, 41, 291, 291, 306, 15, 111, 79, 121,
        21, 265, 9, 133, 99, 268, 204, 162, 209, 4,
        84, 89, 100, 271, 88, 114, 287, 263, 161, 213,
        149, 261, 211, 200, 207, 43, 20, 312, 263, 163,
        12, 42, 39, 324, 210, 182, 280, 15, 198, 263,
        82, 1, 41, 291, 112, 231, 181, 93, 79, 121,
        78, 265, 9, 132, 99, 268, 186, 181, 209, 4,
        84, 40, 38, 200, 299, 114, 287, 133, 6, 213,
        206, 261, 211, 200, 207, 43, 34, 294, 296, 297,
        298, 42, 39, 324, 210, 320, 280, 165, 198, 12,
        82, 1, 41, 291, 466, 466, 15, 263, 79, 466,
        158, 265, 9, 131, 82, 268, 204, 291, 209, 4,
        84, 40, 38, 178, 303, 114, 169, 285, 96, 213,
        174, 261, 211, 200, 207, 43, 34, 294, 296, 297,
        298, 42, 39, 324, 210, 233, 280, 182, 198, 450,
        82, 1, 41, 291, 182, 262, 450, 159, 79, 466,
        466, 265, 9, 128, 466, 268, 204, 263, 209, 4,
        84, 40, 38, 200, 30, 114, 240, 11, 226, 213,
        258, 261, 211, 393, 207, 43, 7, 294, 296, 297,
        298, 42, 39, 324, 210, 176, 280, 466, 198, 393,
        82, 1, 41, 291, 173, 137, 393, 208, 79, 260,
        25, 265, 9, 132, 259, 268, 193, 289, 209, 4,
        84, 40, 38, 200, 438, 114, 180, 285, 91, 213,
        96, 261, 211, 390, 207, 438, 34, 294, 296, 297,
        298, 42, 39, 324, 210, 291, 280, 218, 198, 390,
        82, 1, 41, 291, 14, 266, 390, 134, 79, 200,
        37, 265, 9, 132, 10, 268, 204, 164, 209, 4,
        84, 90, 437, 148, 30, 114, 307, 263, 3, 213,
        220, 261, 211, 437, 187, 214, 34, 264, 308, 124,
        102, 42, 39, 324, 210, 182, 280, 18, 198, 134,
        82, 1, 41, 291, 15, 319, 10, 277, 79, 172,
        225, 265, 9, 133, 117, 268, 204, 327, 209, 4,
        84, 466, 466, 200, 2, 114, 466, 450, 175, 213,
        309, 261, 211, 182, 207, 109, 20, 44, 23, 272,
        222, 42, 39, 324, 210, 283, 280, 156, 198, 221,
        82, 437, 182, 291, 450, 260, 25, 450, 79, 466,
        259, 450, 437, 254, 248, 243, 242, 179, 319, 136,
        12, 265, 9, 225, 279, 268, 96, 15, 209, 4,
        84, 117, 147, 177, 141, 114, 230, 102, 175, 213,
        133, 261, 211, 302, 263, 275, 36, 44, 23, 272,
        225, 195, 238, 110, 66, 107, 111, 85, 317, 291,
        99, 144, 182, 323, 293, 270, 200, 170, 315, 196,
        282, 263, 287, 312, 3, 301, 354, 82, 246, 275,
        291, 247, 202, 326, 225, 195, 83, 118, 74, 107,
        138, 182, 258, 27, 99, 146, 78, 323, 293, 175,
        171, 285, 315, 196, 282, 263, 287, 288, 44, 23,
        272, 275, 316, 194, 108, 140, 225, 195, 269, 118,
        74, 107, 167, 182, 258, 263, 99, 154, 325, 323,
        293, 200, 318, 208, 315, 196, 282, 263, 287, 265,
        8, 300, 305, 268, 249, 199, 209, 4, 84, 183,
        256, 322, 22, 114, 152, 267, 153, 213, 303, 261,
        211, 522, 52, 251, 252, 253, 217, 157, 106, 225,
        275, 87, 135, 258, 160, 225, 195, 155, 110, 66,
        107, 86, 301, 276, 301, 99, 278, 16, 323, 293,
        301, 301, 301, 315, 196, 282, 275, 287, 301, 301,
        301, 225, 195, 301, 118, 74, 107, 301, 321, 301,
        301, 99, 301, 301, 323, 293, 301, 301, 301, 315,
        196, 282, 301, 287, 301, 301, 275, 301, 301, 301,
        205, 225, 195, 301, 118, 56, 101, 301, 216, 301,
        301, 99, 301, 301, 323, 293, 301, 318, 301, 315,
        196, 282, 301, 287, 265, 8, 300, 301, 268, 301,
        301, 209, 4, 84, 301, 301, 301, 301, 114, 301,
        301, 275, 213, 301, 261, 211, 225, 195, 301, 118,
        47, 101, 301, 113, 301, 301, 99, 301, 301, 323,
        293, 301, 301, 301, 315, 196, 282, 301, 287, 301,
        275, 284, 16, 301, 301, 225, 195, 301, 118, 45,
        107, 301, 301, 301, 301, 99, 301, 301, 323, 293,
        301, 301, 301, 315, 196, 282, 301, 287, 275, 301,
        301, 301, 301, 225, 195, 301, 118, 76, 107, 301,
        301, 301, 301, 99, 145, 301, 323, 293, 175, 301,
        301, 315, 196, 282, 263, 287, 275, 44, 23, 272,
        301, 225, 195, 301, 105, 51, 107, 301, 301, 301,
        301, 99, 182, 301, 323, 293, 301, 301, 301, 315,
        196, 282, 301, 287, 275, 301, 301, 301, 301, 225,
        195, 301, 118, 56, 107, 301, 301, 301, 301, 99,
        139, 301, 323, 293, 175, 301, 301, 315, 196, 282,
        263, 287, 275, 44, 23, 272, 301, 225, 195, 301,
        118, 50, 107, 301, 301, 301, 301, 99, 182, 301,
        323, 293, 301, 301, 301, 315, 196, 282, 301, 287,
        275, 301, 301, 301, 301, 225, 195, 301, 118, 61,
        107, 301, 301, 301, 301, 99, 143, 301, 323, 293,
        175, 301, 301, 315, 196, 282, 263, 287, 275, 44,
        23, 272, 301, 225, 195, 301, 118, 63, 107, 301,
        301, 301, 301, 99, 182, 301, 323, 293, 301, 301,
        301, 315, 196, 282, 301, 287, 275, 301, 301, 301,
        301, 225, 195, 301, 118, 60, 107, 301, 301, 301,
        301, 99, 166, 301, 323, 293, 175, 301, 301, 315,
        196, 282, 263, 287, 275, 44, 23, 272, 301, 225,
        195, 301, 97, 69, 107, 301, 301, 301, 301, 99,
        182, 301, 323, 293, 301, 301, 301, 315, 196, 282,
        301, 287, 275, 301, 301, 301, 301, 225, 191, 301,
        118, 54, 107, 301, 301, 301, 301, 99, 301, 301,
        323, 293, 301, 301, 301, 315, 196, 282, 301, 287,
        275, 301, 301, 301, 301, 225, 195, 301, 118, 73,
        107, 301, 301, 301, 301, 99, 301, 301, 323, 293,
        301, 301, 301, 315, 196, 282, 301, 287, 275, 301,
        301, 301, 301, 225, 195, 301, 118, 71, 107, 301,
        301, 301, 301, 99, 301, 301, 323, 293, 301, 301,
        301, 315, 196, 282, 301, 287, 275, 301, 301, 301,
        301, 225, 195, 301, 98, 65, 107, 301, 301, 301,
        301, 99, 301, 301, 323, 293, 301, 301, 301, 315,
        196, 282, 301, 287, 275, 301, 301, 301, 301, 225,
        94, 301, 81, 46, 104, 301, 301, 301, 301, 99,
        301, 301, 323, 293, 301, 301, 301, 315, 196, 282,
        301, 287, 275, 301, 301, 301, 301, 225, 95, 301,
        81, 49, 104, 301, 301, 301, 301, 99, 301, 301,
        323, 293, 301, 301, 301, 315, 196, 282, 301, 287,
        275, 301, 301, 301, 301, 225, 192, 301, 115, 57,
        107, 301, 301, 301, 301, 99, 301, 301, 323, 293,
        301, 301, 301, 315, 196, 282, 301, 287, 275, 301,
        301, 301, 301, 225, 195, 301, 118, 70, 107, 301,
        301, 301, 301, 99, 301, 301, 323, 293, 301, 301,
        301, 315, 196, 282, 301, 287, 275, 301, 301, 301,
        301, 225, 195, 301, 98, 62, 107, 301, 301, 301,
        301, 99, 301, 301, 323, 293, 301, 301, 301, 315,
        196, 282, 301, 287, 275, 301, 301, 301, 301, 225,
        195, 301, 118, 68, 107, 301, 301, 301, 301, 99,
        301, 301, 323, 293, 301, 301, 301, 315, 196, 282,
        301, 287, 275, 301, 301, 301, 301, 225, 195, 301,
        118, 48, 107, 301, 301, 301, 301, 99, 301, 301,
        323, 293, 301, 301, 301, 315, 196, 282, 301, 287,
        275, 301, 301, 301, 301, 225, 195, 301, 118, 59,
        107, 301, 301, 301, 301, 99, 301, 301, 323, 293,
        301, 301, 301, 315, 196, 282, 301, 287, 275, 301,
        301, 301, 301, 225, 195, 301, 118, 77, 107, 301,
        301, 301, 301, 99, 301, 301, 323, 293, 301, 301,
        301, 315, 196, 282, 301, 287, 275, 301, 301, 301,
        301, 225, 195, 301, 118, 72, 107, 301, 301, 301,
        301, 99, 301, 301, 323, 293, 301, 301, 301, 315,
        196, 282, 301, 287, 275, 301, 301, 301, 301, 225,
        195, 301, 118, 67, 107, 301, 301, 301, 301, 99,
        301, 301, 323, 293, 301, 301, 301, 315, 196, 282,
        301, 287, 275, 301, 301, 301, 301, 225, 195, 301,
        118, 53, 107, 301, 301, 301, 301, 99, 301, 301,
        323, 293, 301, 301, 301, 315, 196, 282, 301, 287,
        275, 301, 301, 301, 301, 225, 195, 301, 118, 64,
        107, 301, 301, 301, 301, 99, 301, 301, 323, 293,
        301, 301, 301, 315, 196, 282, 301, 287, 275, 301,
        301, 301, 301, 225, 195, 301, 118, 55, 107, 301,
        301, 301, 301, 99, 301, 301, 323, 293, 301, 301,
        301, 315, 196, 282, 301, 287, 275, 301, 301, 301,
        301, 225, 195, 301, 118, 58, 107, 301, 301, 301,
        301, 99, 301, 301, 323, 293, 301, 301, 301, 315,
        196, 282, 301, 287, 275, 301, 200, 301, 43, 225,
        195, 301, 118, 75, 107, 200, 301, 43, 301, 99,
        301, 301, 323, 293, 301, 292, 301, 315, 196, 282,
        26, 287, 12, 301, 301, 301, 301, 301, 301, 15,
        301, 12, 260, 25, 40, 38, 301, 259, 15, 301,
        403, 403, 403, 40, 38, 301, 301, 12, 301, 150,
        294, 296, 297, 298, 15, 301, 301, 301, 301, 294,
        296, 297, 298, 301, 301, 275, 301, 301, 301, 301,
        225, 195, 301, 127, 301, 107, 437, 301, 403, 403,
        99, 301, 301, 301, 235, 301, 301, 437, 315, 196,
        282, 301, 287, 301, 403, 403, 403, 403, 301, 301,
        275, 301, 200, 301, 43, 225, 195, 301, 120, 301,
        107, 301, 301, 301, 301, 99, 301, 301, 301, 274,
        301, 301, 215, 315, 196, 282, 301, 287, 12, 301,
        301, 301, 466, 466, 301, 15, 301, 466, 450, 275,
        40, 38, 301, 301, 225, 195, 301, 125, 301, 107,
        301, 301, 301, 301, 99, 301, 294, 296, 297, 298,
        301, 301, 315, 196, 282, 450, 287, 301, 450, 301,
        466, 275, 450, 286, 215, 301, 225, 195, 301, 123,
        301, 107, 301, 301, 466, 466, 99, 32, 301, 466,
        450, 301, 301, 301, 315, 196, 282, 301, 287, 301,
        301, 301, 301, 275, 301, 301, 301, 301, 225, 195,
        301, 126, 301, 107, 301, 301, 301, 450, 99, 301,
        450, 301, 466, 301, 450, 301, 315, 196, 282, 275,
        287, 301, 301, 301, 225, 195, 301, 122, 301, 107,
        275, 200, 301, 43, 99, 225, 195, 301, 116, 301,
        107, 301, 315, 196, 282, 99, 287, 301, 215, 301,
        301, 301, 301, 315, 196, 282, 215, 287, 466, 466,
        301, 13, 301, 466, 450, 301, 466, 466, 232, 40,
        38, 466, 450, 200, 31, 43, 301, 301, 301, 301,
        301, 301, 301, 301, 301, 294, 296, 297, 298, 301,
        301, 450, 301, 200, 450, 43, 466, 301, 450, 450,
        301, 301, 450, 185, 466, 200, 450, 43, 301, 301,
        301, 40, 38, 200, 301, 43, 301, 301, 301, 301,
        301, 301, 301, 184, 301, 301, 301, 294, 296, 297,
        298, 40, 38, 301, 301, 301, 301, 301, 301, 301,
        301, 301, 219, 40, 38, 301, 301, 294, 296, 297,
        298, 40, 38, 301, 301, 301, 301, 301, 301, 294,
        296, 297, 298, 28, 301, 301, 301, 294, 296, 297,
        298, 301, 301, 466, 466, 301, 301, 301, 466, 450,
        200, 200, 43, 301, 200, 301, 43, 301, 301, 301,
        237, 360, 301, 301, 236, 301, 301, 301, 229, 301,
        301, 301, 301, 301, 301, 301, 450, 12, 200, 450,
        43, 466, 301, 450, 15, 301, 301, 437, 40, 38,
        301, 301, 40, 38, 301, 301, 301, 301, 437, 391,
        301, 301, 301, 227, 294, 296, 297, 298, 294, 296,
        297, 298, 301, 301, 301, 391, 40, 38, 301, 301,
        301, 301, 391, 301, 301, 437, 301, 301, 397, 301,
        301, 301, 294, 296, 297, 298, 437, 281, 301, 397,
        301, 397, 301, 301, 397, 301, 301, 301, 301, 301,
        301, 397, 301, 397, 301, 397, 301, 301, 301, 301,
        301, 301, 208,
    );
    static public $yy_lookahead     = array(
        3, 23, 75, 11, 77, 78, 15, 80, 101, 12,
        13, 14, 72, 16, 17, 23, 19, 20, 21, 27,
        12, 13, 82, 26, 46, 17, 34, 30, 31, 32,
        33, 53, 35, 1, 37, 95, 45, 15, 46, 42,
        43, 44, 45, 52, 47, 23, 49, 65, 51, 52,
        3, 54, 70, 71, 93, 73, 59, 75, 50, 12,
        13, 14, 80, 16, 17, 72, 19, 20, 21, 76,
        88, 89, 90, 26, 92, 82, 75, 30, 77, 32,
        33, 80, 35, 100, 37, 80, 8, 9, 10, 42,
        43, 44, 45, 100, 47, 36, 49, 38, 51, 52,
        53, 54, 3, 98, 13, 14, 59, 15, 17, 29,
        18, 12, 13, 14, 11, 16, 17, 37, 19, 20,
        21, 64, 65, 66, 67, 26, 23, 70, 48, 30,
        27, 32, 33, 1, 35, 3, 37, 34, 37, 45,
        48, 42, 43, 44, 45, 54, 47, 53, 49, 46,
        51, 52, 3, 54, 12, 13, 13, 14, 59, 17,
        17, 12, 13, 14, 14, 16, 17, 1, 19, 20,
        21, 39, 40, 1, 15, 26, 2, 18, 35, 30,
        9, 32, 33, 11, 35, 53, 37, 55, 56, 57,
        58, 42, 43, 44, 45, 29, 47, 54, 49, 27,
        51, 52, 3, 54, 54, 71, 34, 48, 59, 75,
        22, 12, 13, 14, 80, 16, 17, 72, 19, 20,
        21, 76, 68, 89, 36, 26, 92, 82, 72, 30,
        93, 32, 33, 1, 35, 3, 37, 23, 82, 72,
        27, 42, 43, 44, 45, 100, 47, 34, 49, 82,
        51, 52, 3, 54, 22, 71, 100, 81, 59, 75,
        46, 12, 13, 14, 80, 16, 17, 100, 19, 20,
        21, 39, 40, 1, 60, 26, 92, 14, 36, 30,
        17, 32, 33, 1, 35, 3, 37, 55, 56, 57,
        58, 42, 43, 44, 45, 53, 47, 72, 49, 27,
        51, 52, 3, 54, 12, 13, 34, 82, 59, 17,
        28, 12, 13, 14, 51, 16, 17, 54, 19, 20,
        21, 39, 40, 76, 94, 26, 96, 97, 18, 30,
        76, 32, 33, 1, 35, 3, 37, 55, 56, 57,
        58, 42, 43, 44, 45, 17, 47, 100, 49, 45,
        51, 52, 3, 54, 100, 101, 52, 72, 59, 12,
        13, 12, 13, 14, 17, 16, 17, 82, 19, 20,
        21, 39, 40, 1, 36, 26, 38, 15, 50, 30,
        95, 32, 33, 11, 35, 3, 37, 55, 56, 57,
        58, 42, 43, 44, 45, 81, 47, 50, 49, 27,
        51, 52, 3, 54, 81, 14, 34, 45, 59, 12,
        13, 12, 13, 14, 17, 16, 17, 97, 19, 20,
        21, 39, 40, 1, 37, 26, 96, 97, 37, 30,
        18, 32, 33, 11, 35, 48, 37, 55, 56, 57,
        58, 42, 43, 44, 45, 54, 47, 50, 49, 27,
        51, 52, 3, 54, 13, 11, 34, 45, 59, 1,
        2, 12, 13, 14, 52, 16, 17, 72, 19, 20,
        21, 76, 37, 93, 36, 26, 38, 82, 37, 30,
        45, 32, 33, 48, 35, 75, 37, 77, 53, 17,
        80, 42, 43, 44, 45, 100, 47, 27, 49, 45,
        51, 52, 3, 54, 34, 65, 52, 91, 59, 76,
        70, 12, 13, 14, 98, 16, 17, 53, 19, 20,
        21, 12, 13, 1, 37, 26, 17, 18, 76, 30,
        53, 32, 33, 100, 35, 48, 37, 85, 86, 87,
        18, 42, 43, 44, 45, 105, 47, 51, 49, 17,
        51, 37, 100, 54, 45, 12, 13, 48, 59, 50,
        17, 52, 48, 4, 5, 6, 7, 8, 65, 14,
        27, 12, 13, 70, 91, 16, 18, 34, 19, 20,
        21, 98, 75, 14, 72, 26, 17, 80, 76, 30,
        14, 32, 33, 17, 82, 65, 24, 85, 86, 87,
        70, 71, 17, 73, 74, 75, 48, 104, 105, 54,
        80, 72, 100, 83, 84, 17, 1, 76, 88, 89,
        90, 82, 92, 23, 37, 49, 11, 51, 66, 65,
        54, 69, 102, 103, 70, 71, 17, 73, 74, 75,
        93, 100, 95, 41, 80, 72, 46, 83, 84, 76,
        96, 97, 88, 89, 90, 82, 92, 17, 85, 86,
        87, 65, 35, 99, 17, 72, 70, 71, 14, 73,
        74, 75, 93, 100, 95, 82, 80, 72, 35, 83,
        84, 1, 5, 45, 88, 89, 90, 82, 92, 12,
        13, 14, 17, 16, 5, 99, 19, 20, 21, 17,
        38, 17, 15, 26, 51, 82, 93, 30, 94, 32,
        33, 62, 63, 64, 65, 66, 67, 93, 79, 70,
        65, 80, 80, 95, 93, 70, 71, 93, 73, 74,
        75, 80, 106, 53, 106, 80, 59, 60, 83, 84,
        106, 106, 106, 88, 89, 90, 65, 92, 106, 106,
        106, 70, 71, 106, 73, 74, 75, 106, 103, 106,
        106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
        89, 90, 106, 92, 106, 106, 65, 106, 106, 106,
        99, 70, 71, 106, 73, 74, 75, 106, 77, 106,
        106, 80, 106, 106, 83, 84, 106, 5, 106, 88,
        89, 90, 106, 92, 12, 13, 14, 106, 16, 106,
        106, 19, 20, 21, 106, 106, 106, 106, 26, 106,
        106, 65, 30, 106, 32, 33, 70, 71, 106, 73,
        74, 75, 106, 77, 106, 106, 80, 106, 106, 83,
        84, 106, 106, 106, 88, 89, 90, 106, 92, 106,
        65, 59, 60, 106, 106, 70, 71, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 65, 106,
        106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
        106, 106, 106, 80, 72, 106, 83, 84, 76, 106,
        106, 88, 89, 90, 82, 92, 65, 85, 86, 87,
        106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
        106, 80, 100, 106, 83, 84, 106, 106, 106, 88,
        89, 90, 106, 92, 65, 106, 106, 106, 106, 70,
        71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
        72, 106, 83, 84, 76, 106, 106, 88, 89, 90,
        82, 92, 65, 85, 86, 87, 106, 70, 71, 106,
        73, 74, 75, 106, 106, 106, 106, 80, 100, 106,
        83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
        65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 72, 106, 83, 84,
        76, 106, 106, 88, 89, 90, 82, 92, 65, 85,
        86, 87, 106, 70, 71, 106, 73, 74, 75, 106,
        106, 106, 106, 80, 100, 106, 83, 84, 106, 106,
        106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
        106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
        106, 80, 72, 106, 83, 84, 76, 106, 106, 88,
        89, 90, 82, 92, 65, 85, 86, 87, 106, 70,
        71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
        100, 106, 83, 84, 106, 106, 106, 88, 89, 90,
        106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
        73, 74, 75, 106, 106, 106, 106, 80, 106, 106,
        83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
        65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 65, 106,
        106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
        106, 106, 106, 80, 106, 106, 83, 84, 106, 106,
        106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
        106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
        106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
        89, 90, 106, 92, 65, 106, 106, 106, 106, 70,
        71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
        106, 106, 83, 84, 106, 106, 106, 88, 89, 90,
        106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
        73, 74, 75, 106, 106, 106, 106, 80, 106, 106,
        83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
        65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 65, 106,
        106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
        106, 106, 106, 80, 106, 106, 83, 84, 106, 106,
        106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
        106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
        106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
        89, 90, 106, 92, 65, 106, 106, 106, 106, 70,
        71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
        106, 106, 83, 84, 106, 106, 106, 88, 89, 90,
        106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
        73, 74, 75, 106, 106, 106, 106, 80, 106, 106,
        83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
        65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 65, 106,
        106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
        106, 106, 106, 80, 106, 106, 83, 84, 106, 106,
        106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
        106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
        106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
        89, 90, 106, 92, 65, 106, 106, 106, 106, 70,
        71, 106, 73, 74, 75, 106, 106, 106, 106, 80,
        106, 106, 83, 84, 106, 106, 106, 88, 89, 90,
        106, 92, 65, 106, 106, 106, 106, 70, 71, 106,
        73, 74, 75, 106, 106, 106, 106, 80, 106, 106,
        83, 84, 106, 106, 106, 88, 89, 90, 106, 92,
        65, 106, 106, 106, 106, 70, 71, 106, 73, 74,
        75, 106, 106, 106, 106, 80, 106, 106, 83, 84,
        106, 106, 106, 88, 89, 90, 106, 92, 65, 106,
        106, 106, 106, 70, 71, 106, 73, 74, 75, 106,
        106, 106, 106, 80, 106, 106, 83, 84, 106, 106,
        106, 88, 89, 90, 106, 92, 65, 106, 106, 106,
        106, 70, 71, 106, 73, 74, 75, 106, 106, 106,
        106, 80, 106, 106, 83, 84, 106, 106, 106, 88,
        89, 90, 106, 92, 65, 106, 1, 106, 3, 70,
        71, 106, 73, 74, 75, 1, 106, 3, 106, 80,
        106, 106, 83, 84, 106, 11, 106, 88, 89, 90,
        25, 92, 27, 106, 106, 106, 106, 106, 106, 34,
        106, 27, 12, 13, 39, 40, 106, 17, 34, 106,
        1, 2, 3, 39, 40, 106, 106, 27, 106, 29,
        55, 56, 57, 58, 34, 106, 106, 106, 106, 55,
        56, 57, 58, 106, 106, 65, 106, 106, 106, 106,
        70, 71, 106, 73, 106, 75, 37, 106, 39, 40,
        80, 106, 106, 106, 84, 106, 106, 48, 88, 89,
        90, 106, 92, 106, 55, 56, 57, 58, 106, 106,
        65, 106, 1, 106, 3, 70, 71, 106, 73, 106,
        75, 106, 106, 106, 106, 80, 106, 106, 106, 84,
        106, 106, 2, 88, 89, 90, 106, 92, 27, 106,
        106, 106, 12, 13, 106, 34, 106, 17, 18, 65,
        39, 40, 106, 106, 70, 71, 106, 73, 106, 75,
        106, 106, 106, 106, 80, 106, 55, 56, 57, 58,
        106, 106, 88, 89, 90, 45, 92, 106, 48, 106,
        50, 65, 52, 53, 2, 106, 70, 71, 106, 73,
        106, 75, 106, 106, 12, 13, 80, 15, 106, 17,
        18, 106, 106, 106, 88, 89, 90, 106, 92, 106,
        106, 106, 106, 65, 106, 106, 106, 106, 70, 71,
        106, 73, 106, 75, 106, 106, 106, 45, 80, 106,
        48, 106, 50, 106, 52, 106, 88, 89, 90, 65,
        92, 106, 106, 106, 70, 71, 106, 73, 106, 75,
        65, 1, 106, 3, 80, 70, 71, 106, 73, 106,
        75, 106, 88, 89, 90, 80, 92, 106, 2, 106,
        106, 106, 106, 88, 89, 90, 2, 92, 12, 13,
        106, 15, 106, 17, 18, 106, 12, 13, 38, 39,
        40, 17, 18, 1, 2, 3, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 55, 56, 57, 58, 106,
        106, 45, 106, 1, 48, 3, 50, 106, 52, 45,
        106, 106, 48, 11, 50, 1, 52, 3, 106, 106,
        106, 39, 40, 1, 106, 3, 106, 106, 106, 106,
        106, 106, 106, 11, 106, 106, 106, 55, 56, 57,
        58, 39, 40, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 38, 39, 40, 106, 106, 55, 56, 57,
        58, 39, 40, 106, 106, 106, 106, 106, 106, 55,
        56, 57, 58, 2, 106, 106, 106, 55, 56, 57,
        58, 106, 106, 12, 13, 106, 106, 106, 17, 18,
        1, 1, 3, 106, 1, 106, 3, 106, 106, 106,
        11, 11, 106, 106, 11, 106, 106, 106, 18, 106,
        106, 106, 106, 106, 106, 106, 45, 27, 1, 48,
        3, 50, 106, 52, 34, 106, 106, 37, 39, 40,
        106, 106, 39, 40, 106, 106, 106, 106, 48, 11,
        106, 106, 106, 15, 55, 56, 57, 58, 55, 56,
        57, 58, 106, 106, 106, 27, 39, 40, 106, 106,
        106, 106, 34, 106, 106, 37, 106, 106, 11, 106,
        106, 106, 55, 56, 57, 58, 48, 60, 106, 22,
        106, 24, 106, 106, 27, 106, 106, 106, 106, 106,
        106, 34, 106, 36, 106, 38, 106, 106, 106, 106,
        106, 106, 45,
    );
    static public $yy_shift_ofst    = array(
        559, 399, 99, 99, 349, 99, 399, 349, -3, -3,
        47, 99, 149, 449, 99, 99, 99, 99, 149, 99,
        99, 99, 99, 99, 99, 99, 99, 299, 249, 99,
        99, 99, 99, 99, 99, 99, 99, 199, 199, 499,
        499, 499, 499, 499, 499, 1635, 1644, 1741, 1741, 1741,
        1741, 1741, 559, 2029, 2057, 2033, 1954, 132, 1880, 1922,
        1962, 1942, 282, 232, 332, 332, 332, 332, 332, 332,
        332, 332, 332, 332, 332, 332, 382, 382, 576, 677,
        2030, 172, 263, 272, 391, 792, 1660, 543, 391, 272,
        272, 391, 412, 458, -8, 103, 91, 422, 372, 397,
        78, 159, 142, 142, 92, 615, 213, 558, 522, 569,
        166, 569, 555, 213, 470, 680, 32, 310, 32, 32,
        32, 310, 32, 32, 32, -23, -23, -23, 1896, 1812,
        1760, 2011, 1904, 509, 143, 8, 292, -9, 454, 213,
        213, 213, 213, 213, 213, 213, 213, 22, 454, 454,
        150, 213, 304, 454, 213, 454, 304, 454, 150, 213,
        454, 213, 213, 213, 213, 213, 213, 454, 441, 310,
        32, 310, 32, 174, 32, 32, 174, 101, 32, 171,
        310, -23, -23, -23, -23, -23, 1679, 2097, 2068, 347,
        435, 214, -22, 80, 59, 600, 487, 188, 387, 338,
        328, 94, 242, 362, 514, 438, 653, 638, 643, 654,
        627, 647, 675, 682, 687, 684, 662, 689, 640, 602,
        532, 477, 472, 464, 101, 444, 585, 598, 572, 619,
        587, 496,
    );
    static public $yy_reduce_ofst   = array(
        649, 530, 596, 564, 756, 681, 655, 711, 1149, 1177,
        1205, 1233, 1121, 1093, 981, 1009, 1037, 1289, 1261, 1429,
        1541, 953, 1485, 1569, 1513, 1457, 1317, 1345, 1373, 1401,
        1065, 813, 841, 897, 869, 925, 785, 1640, 1675, 1746,
        -18, 1778, 1804, 1714, 1815, 512, 878, 990, 934, 878,
        573, 822, 57, 452, 452, 452, 452, 452, 452, 452,
        452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
        452, 452, 452, 452, 452, 452, 452, 452, 134, 503,
        395, -7, 184, 145, -73, 440, -60, 285, 410, 156,
        167, 1, 230, 254, 539, 539, 5, 247, 247, 547,
        562, 330, 547, 579, 330, 247, 225, 330, 433, 416,
        247, 483, 507, 593, 605, 247, 247, 554, 247, 247,
        247, 330, 247, 247, 541, 247, 247, 247, 613, 613,
        613, 613, 613, 613, 642, 628, 613, 613, 614, 623,
        623, 623, 623, 623, 623, 623, 623, 639, 614, 614,
        641, 623, 624, 614, 623, 614, 634, 614, 651, 623,
        614, 623, 623, 623, 623, 623, 623, 614, 631, 320,
        -17, 320, -17, -93, -17, -17, -93, -39, -17, 154,
        320, 323, 314, 176, 137, 380,
    );
    static public $yyExpectedTokens = array(
        array(4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 32, 33,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 52, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 32, 33, 35, 37, 42, 43, 44, 45, 47, 49, 51, 54, 59,),
        array(1, 3, 25, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 11, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 27, 34, 39, 40, 55, 56, 57, 58,),
        array(4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 32, 33,),
        array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58, 60,),
        array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 38, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 53, 55, 56, 57, 58,),
        array(1, 3, 38, 39, 40, 55, 56, 57, 58,),
        array(1, 2, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 11, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 28, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 22, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(1, 3, 39, 40, 55, 56, 57, 58,),
        array(3, 39, 40, 55, 56, 57, 58,),
        array(3, 39, 40, 55, 56, 57, 58,),
        array(14, 17, 49, 51, 54,),
        array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 32, 33, 59, 60,),
        array(1, 11, 18, 27, 34, 37, 48,),
        array(1, 11, 27, 34,),
        array(14, 17, 51, 54,),
        array(1, 27, 34,),
        array(14, 37, 54,),
        array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 32, 33, 59, 60,),
        array(12, 13, 17, 27, 29, 34,),
        array(12, 13, 17, 27, 34,),
        array(14, 37, 54,),
        array(1, 27, 34,),
        array(1, 27, 34,),
        array(14, 37, 54,),
        array(18, 45, 52,),
        array(1, 2,),
        array(11, 23, 27, 34, 46,),
        array(11, 23, 27, 34, 46,),
        array(13, 14, 17, 54,),
        array(1, 11, 27, 34,),
        array(1, 11, 27, 34,),
        array(12, 13, 17, 50,),
        array(8, 9, 10,),
        array(15, 18, 48,),
        array(12, 13, 17,),
        array(12, 13, 17,),
        array(15, 18, 48,),
        array(1, 11,),
        array(27, 34,),
        array(18, 48,),
        array(1, 18,),
        array(14, 17,),
        array(1, 29,),
        array(14, 17,),
        array(14, 54,),
        array(27, 34,),
        array(27, 34,),
        array(1, 53,),
        array(1,),
        array(18,),
        array(1,),
        array(1,),
        array(1,),
        array(18,),
        array(1,),
        array(1,),
        array(1,),
        array(),
        array(),
        array(),
        array(2, 12, 13, 15, 17, 18, 45, 48, 50, 52,),
        array(2, 12, 13, 15, 17, 18, 45, 48, 50, 52,),
        array(2, 12, 13, 17, 18, 45, 48, 50, 52, 53,),
        array(2, 12, 13, 17, 18, 45, 48, 50, 52,),
        array(2, 12, 13, 17, 18, 45, 48, 50, 52,),
        array(12, 13, 17, 18, 45, 48, 50, 52,),
        array(13, 14, 17, 35, 54,),
        array(12, 13, 17, 50,),
        array(12, 13, 17,),
        array(15, 45, 52,),
        array(45, 52,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(15, 23,),
        array(45, 52,),
        array(45, 52,),
        array(14, 54,),
        array(27, 34,),
        array(45, 52,),
        array(45, 52,),
        array(27, 34,),
        array(45, 52,),
        array(45, 52,),
        array(45, 52,),
        array(14, 54,),
        array(27, 34,),
        array(45, 52,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(27, 34,),
        array(45, 52,),
        array(13, 37,),
        array(18,),
        array(1,),
        array(18,),
        array(1,),
        array(2,),
        array(1,),
        array(1,),
        array(2,),
        array(37,),
        array(1,),
        array(9,),
        array(18,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(1, 2, 3, 37, 39, 40, 48, 55, 56, 57, 58,),
        array(11, 22, 24, 27, 34, 36, 38, 45,),
        array(11, 15, 27, 34, 37, 48,),
        array(12, 13, 17, 50,),
        array(37, 45, 48, 53,),
        array(23, 46, 60,),
        array(23, 46, 53,),
        array(29, 37, 48,),
        array(36, 38,),
        array(23, 46,),
        array(37, 48,),
        array(22, 36,),
        array(37, 48,),
        array(36, 38,),
        array(17, 50,),
        array(45, 53,),
        array(36, 53,),
        array(15, 45,),
        array(37, 48,),
        array(36, 38,),
        array(51,),
        array(45,),
        array(35,),
        array(14,),
        array(35,),
        array(17,),
        array(17,),
        array(17,),
        array(15,),
        array(17,),
        array(38,),
        array(5,),
        array(17,),
        array(41,),
        array(17,),
        array(53,),
        array(17,),
        array(53,),
        array(37,),
        array(11,),
        array(17,),
        array(17,),
        array(24,),
        array(17,),
        array(37,),
        array(51,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
    );
    static public $yy_default       = array(
        331, 506, 485, 485, 521, 485, 521, 521, 521, 521,
        521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
        521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
        521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
        521, 521, 521, 521, 521, 387, 521, 365, 387, 352,
        387, 355, 328, 521, 521, 521, 521, 521, 521, 521,
        521, 521, 392, 521, 399, 392, 509, 508, 370, 389,
        394, 398, 507, 483, 484, 409, 414, 413, 521, 521,
        425, 401, 521, 387, 521, 521, 387, 387, 521, 387,
        387, 521, 497, 377, 415, 415, 521, 401, 401, 450,
        521, 440, 450, 450, 440, 401, 387, 440, 381, 521,
        401, 521, 521, 367, 387, 401, 408, 494, 401, 404,
        412, 440, 417, 418, 383, 405, 416, 492, 439, 439,
        439, 439, 439, 439, 521, 452, 450, 466, 448, 353,
        368, 372, 351, 373, 349, 356, 357, 521, 477, 478,
        521, 374, 443, 447, 376, 446, 445, 444, 521, 375,
        475, 363, 362, 361, 359, 369, 366, 476, 450, 498,
        384, 495, 382, 486, 378, 407, 487, 450, 434, 343,
        472, 491, 491, 491, 450, 450, 425, 421, 425, 451,
        425, 415, 415, 425, 521, 415, 521, 521, 435, 521,
        521, 421, 521, 421, 425, 521, 521, 421, 423, 521,
        521, 521, 521, 521, 521, 521, 521, 335, 521, 427,
        521, 521, 521, 430, 466, 521, 521, 521, 395, 521,
        496, 521, 427, 489, 481, 493, 456, 471, 488, 466,
        480, 371, 339, 338, 340, 341, 344, 342, 336, 337,
        330, 329, 332, 333, 334, 345, 400, 465, 468, 469,
        470, 380, 490, 386, 396, 347, 346, 385, 358, 364,
        388, 428, 410, 379, 411, 433, 463, 436, 510, 432,
        430, 515, 431, 512, 511, 473, 461, 442, 441, 474,
        517, 467, 518, 406, 499, 464, 500, 501, 502, 514,
        516, 438, 437, 449, 479, 453, 429, 482, 457, 458,
        460, 462, 419, 454, 455, 426, 424, 513, 520, 519,
        503, 505, 403, 402, 420, 422, 504, 459,
    );
    public static $yyFallback       = array();
    public static $yyRuleName       = array(
        'start ::= template',
        'template ::= template_element',
        'template ::= template template_element',
        'template ::=',
        'template_element ::= smartytag',
        'template_element ::= literal',
        'template_element ::= PHP',
        'template_element ::= text_content',
        'text_content ::= TEXT',
        'text_content ::= text_content TEXT',
        'template_element ::= STRIPON',
        'template_element ::= STRIPOFF',
        'literal ::= LITERALSTART LITERALEND',
        'literal ::= LITERALSTART literal_elements LITERALEND',
        'literal_elements ::= literal_elements literal_element',
        'literal_elements ::=',
        'literal_element ::= literal',
        'literal_element ::= LITERAL',
        'smartytag ::= tag RDEL',
        'smartytag ::= SIMPELOUTPUT',
        'tag ::= LDEL variable',
        'tag ::= LDEL variable attributes',
        'tag ::= LDEL value',
        'tag ::= LDEL value attributes',
        'tag ::= LDEL expr',
        'tag ::= LDEL expr attributes',
        'tag ::= LDEL DOLLARID EQUAL value',
        'tag ::= LDEL DOLLARID EQUAL expr',
        'tag ::= LDEL DOLLARID EQUAL expr attributes',
        'tag ::= LDEL varindexed EQUAL expr attributes',
        'smartytag ::= SIMPLETAG',
        'tag ::= LDEL ID attributes',
        'tag ::= LDEL ID',
        'tag ::= LDEL ID modifierlist attributes',
        'tag ::= LDEL ID PTR ID attributes',
        'tag ::= LDEL ID PTR ID modifierlist attributes',
        'tag ::= LDELMAKENOCACHE DOLLARID',
        'tag ::= LDELIF expr',
        'tag ::= LDELIF expr attributes',
        'tag ::= LDELIF statement',
        'tag ::= LDELIF statement attributes',
        'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
        'foraction ::= EQUAL expr',
        'foraction ::= INCDEC',
        'tag ::= LDELFOR statement TO expr attributes',
        'tag ::= LDELFOR statement TO expr STEP expr attributes',
        'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
        'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
        'tag ::= LDELFOREACH attributes',
        'tag ::= LDELSETFILTER ID modparameters',
        'tag ::= LDELSETFILTER ID modparameters modifierlist',
        'tag ::= LDEL SMARTYBLOCKCHILDPARENT',
        'smartytag ::= CLOSETAG',
        'tag ::= LDELSLASH ID',
        'tag ::= LDELSLASH ID modifierlist',
        'tag ::= LDELSLASH ID PTR ID',
        'tag ::= LDELSLASH ID PTR ID modifierlist',
        'attributes ::= attributes attribute',
        'attributes ::= attribute',
        'attributes ::=',
        'attribute ::= SPACE ID EQUAL ID',
        'attribute ::= ATTR expr',
        'attribute ::= ATTR value',
        'attribute ::= SPACE ID',
        'attribute ::= SPACE expr',
        'attribute ::= SPACE value',
        'attribute ::= SPACE INTEGER EQUAL expr',
        'statements ::= statement',
        'statements ::= statements COMMA statement',
        'statement ::= DOLLARID EQUAL INTEGER',
        'statement ::= DOLLARID EQUAL expr',
        'statement ::= varindexed EQUAL expr',
        'statement ::= OPENP statement CLOSEP',
        'expr ::= value',
        'expr ::= ternary',
        'expr ::= DOLLARID COLON ID',
        'expr ::= expr MATH value',
        'expr ::= expr UNIMATH value',
        'expr ::= array',
        'expr ::= expr modifierlist',
        'expr ::= expr tlop value',
        'expr ::= expr lop expr',
        'expr ::= expr scond',
        'expr ::= expr ISIN array',
        'expr ::= expr ISIN value',
        'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
        'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',
        'value ::= variable',
        'value ::= UNIMATH value',
        'value ::= NOT value',
        'value ::= TYPECAST value',
        'value ::= variable INCDEC',
        'value ::= HEX',
        'value ::= INTEGER',
        'value ::= INTEGER DOT INTEGER',
        'value ::= INTEGER DOT',
        'value ::= DOT INTEGER',
        'value ::= ID',
        'value ::= function',
        'value ::= OPENP expr CLOSEP',
        'value ::= variable INSTANCEOF ns1',
        'value ::= variable INSTANCEOF variable',
        'value ::= SINGLEQUOTESTRING',
        'value ::= doublequoted_with_quotes',
        'value ::= varindexed DOUBLECOLON static_class_access',
        'value ::= smartytag',
        'value ::= value modifierlist',
        'value ::= NAMESPACE',
        'value ::= ns1 DOUBLECOLON static_class_access',
        'ns1 ::= ID',
        'ns1 ::= NAMESPACE',
        'variable ::= DOLLARID',
        'variable ::= varindexed',
        'variable ::= varvar AT ID',
        'variable ::= object',
        'variable ::= HATCH ID HATCH',
        'variable ::= HATCH ID HATCH arrayindex',
        'variable ::= HATCH variable HATCH',
        'variable ::= HATCH variable HATCH arrayindex',
        'varindexed ::= DOLLARID arrayindex',
        'varindexed ::= varvar arrayindex',
        'arrayindex ::= arrayindex indexdef',
        'arrayindex ::=',
        'indexdef ::= DOT DOLLARID',
        'indexdef ::= DOT varvar',
        'indexdef ::= DOT varvar AT ID',
        'indexdef ::= DOT ID',
        'indexdef ::= DOT INTEGER',
        'indexdef ::= DOT LDEL expr RDEL',
        'indexdef ::= OPENB ID CLOSEB',
        'indexdef ::= OPENB ID DOT ID CLOSEB',
        'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
        'indexdef ::= OPENB INTEGER CLOSEB',
        'indexdef ::= OPENB DOLLARID CLOSEB',
        'indexdef ::= OPENB variable CLOSEB',
        'indexdef ::= OPENB value CLOSEB',
        'indexdef ::= OPENB expr CLOSEB',
        'indexdef ::= OPENB CLOSEB',
        'varvar ::= DOLLARID',
        'varvar ::= DOLLAR',
        'varvar ::= varvar varvarele',
        'varvarele ::= ID',
        'varvarele ::= SIMPELOUTPUT',
        'varvarele ::= LDEL expr RDEL',
        'object ::= varindexed objectchain',
        'objectchain ::= objectelement',
        'objectchain ::= objectchain objectelement',
        'objectelement ::= PTR ID arrayindex',
        'objectelement ::= PTR varvar arrayindex',
        'objectelement ::= PTR LDEL expr RDEL arrayindex',
        'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
        'objectelement ::= PTR method',
        'function ::= ns1 OPENP params CLOSEP',
        'method ::= ID OPENP params CLOSEP',
        'method ::= DOLLARID OPENP params CLOSEP',
        'params ::= params COMMA expr',
        'params ::= expr',
        'params ::=',
        'modifierlist ::= modifierlist modifier modparameters',
        'modifierlist ::= modifier modparameters',
        'modifier ::= VERT AT ID',
        'modifier ::= VERT ID',
        'modparameters ::= modparameters modparameter',
        'modparameters ::=',
        'modparameter ::= COLON value',
        'modparameter ::= COLON array',
        'static_class_access ::= method',
        'static_class_access ::= method objectchain',
        'static_class_access ::= ID',
        'static_class_access ::= DOLLARID arrayindex',
        'static_class_access ::= DOLLARID arrayindex objectchain',
        'lop ::= LOGOP',
        'lop ::= SLOGOP',
        'tlop ::= TLOGOP',
        'scond ::= SINGLECOND',
        'array ::= OPENB arrayelements CLOSEB',
        'arrayelements ::= arrayelement',
        'arrayelements ::= arrayelements COMMA arrayelement',
        'arrayelements ::=',
        'arrayelement ::= value APTR expr',
        'arrayelement ::= ID APTR expr',
        'arrayelement ::= expr',
        'doublequoted_with_quotes ::= QUOTE QUOTE',
        'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
        'doublequoted ::= doublequoted doublequotedcontent',
        'doublequoted ::= doublequotedcontent',
        'doublequotedcontent ::= BACKTICK variable BACKTICK',
        'doublequotedcontent ::= BACKTICK expr BACKTICK',
        'doublequotedcontent ::= DOLLARID',
        'doublequotedcontent ::= LDEL variable RDEL',
        'doublequotedcontent ::= LDEL expr RDEL',
        'doublequotedcontent ::= smartytag',
        'doublequotedcontent ::= TEXT',
    );
    public static $yyRuleInfo       = array(
        array(0 => 62, 1 => 1),
        array(0 => 63, 1 => 1),
        array(0 => 63, 1 => 2),
        array(0 => 63, 1 => 0),
        array(0 => 64, 1 => 1),
        array(0 => 64, 1 => 1),
        array(0 => 64, 1 => 1),
        array(0 => 64, 1 => 1),
        array(0 => 67, 1 => 1),
        array(0 => 67, 1 => 2),
        array(0 => 64, 1 => 1),
        array(0 => 64, 1 => 1),
        array(0 => 66, 1 => 2),
        array(0 => 66, 1 => 3),
        array(0 => 68, 1 => 2),
        array(0 => 68, 1 => 0),
        array(0 => 69, 1 => 1),
        array(0 => 69, 1 => 1),
        array(0 => 65, 1 => 2),
        array(0 => 65, 1 => 1),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 4),
        array(0 => 70, 1 => 4),
        array(0 => 70, 1 => 5),
        array(0 => 70, 1 => 5),
        array(0 => 65, 1 => 1),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 4),
        array(0 => 70, 1 => 5),
        array(0 => 70, 1 => 6),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 8),
        array(0 => 79, 1 => 2),
        array(0 => 79, 1 => 1),
        array(0 => 70, 1 => 5),
        array(0 => 70, 1 => 7),
        array(0 => 70, 1 => 6),
        array(0 => 70, 1 => 8),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 4),
        array(0 => 70, 1 => 2),
        array(0 => 65, 1 => 1),
        array(0 => 70, 1 => 2),
        array(0 => 70, 1 => 3),
        array(0 => 70, 1 => 4),
        array(0 => 70, 1 => 5),
        array(0 => 72, 1 => 2),
        array(0 => 72, 1 => 1),
        array(0 => 72, 1 => 0),
        array(0 => 82, 1 => 4),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 2),
        array(0 => 82, 1 => 4),
        array(0 => 78, 1 => 1),
        array(0 => 78, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 77, 1 => 3),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 1),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 2),
        array(0 => 74, 1 => 3),
        array(0 => 74, 1 => 3),
        array(0 => 83, 1 => 7),
        array(0 => 83, 1 => 7),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 3),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 2),
        array(0 => 73, 1 => 1),
        array(0 => 73, 1 => 3),
        array(0 => 89, 1 => 1),
        array(0 => 89, 1 => 1),
        array(0 => 71, 1 => 1),
        array(0 => 71, 1 => 1),
        array(0 => 71, 1 => 3),
        array(0 => 71, 1 => 1),
        array(0 => 71, 1 => 3),
        array(0 => 71, 1 => 4),
        array(0 => 71, 1 => 3),
        array(0 => 71, 1 => 4),
        array(0 => 75, 1 => 2),
        array(0 => 75, 1 => 2),
        array(0 => 93, 1 => 2),
        array(0 => 93, 1 => 0),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 4),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 4),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 5),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 3),
        array(0 => 94, 1 => 2),
        array(0 => 80, 1 => 1),
        array(0 => 80, 1 => 1),
        array(0 => 80, 1 => 2),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 3),
        array(0 => 92, 1 => 2),
        array(0 => 96, 1 => 1),
        array(0 => 96, 1 => 2),
        array(0 => 97, 1 => 3),
        array(0 => 97, 1 => 3),
        array(0 => 97, 1 => 5),
        array(0 => 97, 1 => 6),
        array(0 => 97, 1 => 2),
        array(0 => 88, 1 => 4),
        array(0 => 98, 1 => 4),
        array(0 => 98, 1 => 4),
        array(0 => 99, 1 => 3),
        array(0 => 99, 1 => 1),
        array(0 => 99, 1 => 0),
        array(0 => 76, 1 => 3),
        array(0 => 76, 1 => 2),
        array(0 => 100, 1 => 3),
        array(0 => 100, 1 => 2),
        array(0 => 81, 1 => 2),
        array(0 => 81, 1 => 0),
        array(0 => 101, 1 => 2),
        array(0 => 101, 1 => 2),
        array(0 => 91, 1 => 1),
        array(0 => 91, 1 => 2),
        array(0 => 91, 1 => 1),
        array(0 => 91, 1 => 2),
        array(0 => 91, 1 => 3),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 85, 1 => 1),
        array(0 => 87, 1 => 1),
        array(0 => 84, 1 => 3),
        array(0 => 102, 1 => 1),
        array(0 => 102, 1 => 3),
        array(0 => 102, 1 => 0),
        array(0 => 103, 1 => 3),
        array(0 => 103, 1 => 3),
        array(0 => 103, 1 => 1),
        array(0 => 90, 1 => 2),
        array(0 => 90, 1 => 3),
        array(0 => 104, 1 => 2),
        array(0 => 104, 1 => 1),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 1),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 3),
        array(0 => 105, 1 => 1),
        array(0 => 105, 1 => 1),
    );
    public static $yyReduceMap      = array(
        0   => 0,
        1   => 1,
        2   => 2,
        4   => 4,
        5   => 5,
        6   => 6,
        7   => 7,
        8   => 8,
        16  => 8,
        17  => 8,
        43  => 8,
        64  => 8,
        65  => 8,
        73  => 8,
        74  => 8,
        78  => 8,
        87  => 8,
        92  => 8,
        93  => 8,
        98  => 8,
        102 => 8,
        103 => 8,
        107 => 8,
        109 => 8,
        114 => 8,
        176 => 8,
        181 => 8,
        9   => 9,
        10  => 10,
        11  => 11,
        12  => 12,
        15  => 12,
        13  => 13,
        72  => 13,
        14  => 14,
        88  => 14,
        90  => 14,
        91  => 14,
        121 => 14,
        18  => 18,
        19  => 19,
        20  => 20,
        22  => 20,
        24  => 20,
        21  => 21,
        23  => 21,
        25  => 21,
        26  => 26,
        27  => 26,
        28  => 28,
        29  => 29,
        30  => 30,
        31  => 31,
        32  => 32,
        33  => 33,
        34  => 34,
        35  => 35,
        36  => 36,
        37  => 37,
        38  => 38,
        40  => 38,
        39  => 39,
        41  => 41,
        42  => 42,
        44  => 44,
        45  => 45,
        46  => 46,
        47  => 47,
        48  => 48,
        49  => 49,
        50  => 50,
        51  => 51,
        52  => 52,
        53  => 53,
        54  => 54,
        55  => 55,
        56  => 56,
        57  => 57,
        58  => 58,
        67  => 58,
        156 => 58,
        160 => 58,
        164 => 58,
        165 => 58,
        59  => 59,
        157 => 59,
        163 => 59,
        60  => 60,
        61  => 61,
        62  => 61,
        63  => 63,
        141 => 63,
        66  => 66,
        68  => 68,
        69  => 69,
        70  => 69,
        71  => 71,
        75  => 75,
        76  => 76,
        77  => 76,
        79  => 79,
        106 => 79,
        80  => 80,
        81  => 81,
        82  => 82,
        83  => 83,
        84  => 84,
        85  => 85,
        86  => 86,
        89  => 89,
        94  => 94,
        95  => 95,
        96  => 96,
        97  => 97,
        99  => 99,
        100 => 100,
        101 => 100,
        104 => 104,
        105 => 105,
        108 => 108,
        110 => 110,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        178 => 122,
        123 => 123,
        124 => 124,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        136 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 131,
        134 => 131,
        135 => 131,
        133 => 133,
        137 => 137,
        138 => 138,
        139 => 139,
        182 => 139,
        140 => 140,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        158 => 158,
        159 => 159,
        161 => 161,
        162 => 162,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        177 => 177,
        179 => 179,
        180 => 180,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        187 => 186,
        189 => 186,
        188 => 188,
        190 => 190,
        191 => 191,
        192 => 192,
    );
    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;
    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;
    /**
     * @var
     */
    public $yymajor;
    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;
    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;
    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;
    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;
    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    public $lex;
    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;
    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;
    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;
    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;
    /**
     * security object
     *
     * @var Smarty_Security
     */
    public $security = null;
    /**
     * template prefix array
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_prefix = array();
    /**
     * security object
     *
     * @var \Smarty_Internal_ParseTree[]
     */
    public $template_postfix = array();
    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;
    public $yyerrcnt;
    public $yystack          = array();
    public $yyTokenName      = array(
        '$', 'VERT', 'COLON', 'UNIMATH',
        'PHP', 'TEXT', 'STRIPON', 'STRIPOFF',
        'LITERALSTART', 'LITERALEND', 'LITERAL', 'RDEL',
        'SIMPELOUTPUT', 'LDEL', 'DOLLARID', 'EQUAL',
        'SIMPLETAG', 'ID', 'PTR', 'LDELMAKENOCACHE',
        'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
        'TO', 'STEP', 'LDELFOREACH', 'SPACE',
        'AS', 'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT',
        'CLOSETAG', 'LDELSLASH', 'ATTR', 'INTEGER',
        'COMMA', 'OPENP', 'CLOSEP', 'MATH',
        'ISIN', 'QMARK', 'NOT', 'TYPECAST',
        'HEX', 'DOT', 'INSTANCEOF', 'SINGLEQUOTESTRING',
        'DOUBLECOLON', 'NAMESPACE', 'AT', 'HATCH',
        'OPENB', 'CLOSEB', 'DOLLAR', 'LOGOP',
        'SLOGOP', 'TLOGOP', 'SINGLECOND', 'QUOTE',
        'BACKTICK', 'error', 'start', 'template',
        'template_element', 'smartytag', 'literal', 'text_content',
        'literal_elements', 'literal_element', 'tag', 'variable',
        'attributes', 'value', 'expr', 'varindexed',
        'modifierlist', 'statement', 'statements', 'foraction',
        'varvar', 'modparameters', 'attribute', 'ternary',
        'array', 'tlop', 'lop', 'scond',
        'function', 'ns1', 'doublequoted_with_quotes', 'static_class_access',
        'object', 'arrayindex', 'indexdef', 'varvarele',
        'objectchain', 'objectelement', 'method', 'params',
        'modifier', 'modparameter', 'arrayelements', 'arrayelement',
        'doublequoted', 'doublequotedcontent',
    );                    /* Index of top element in stack */
    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;                 /* Shifts left before out of the error */
    private $_retvalue;  /* The parser's stack */

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    /**
     *  merge PHP code with prefix code and return parse tree tag object
     *
     * @param string $code
     *
     * @return Smarty_Internal_ParseTree_Tag
     */
    public function mergePrefixCode($code)
    {
        $tmp = '';
        foreach ($this->compiler->prefix_code as $preCode) {
            $tmp .= $preCode;
        }
        $this->compiler->prefix_code = array();
        $tmp .= $code;
        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
    }

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } else if (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[ $tokenType ];
        } else {
            return "Unknown";
        }
    }

    public function yy_pop_parser_stack()
    {
        if (empty($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[ $yytos->major ] .
                   "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        static $res3 = array();
        static $res4 = array();
        $state = $this->yystack[ $this->yyidx ]->stateno;
        $expected = self::$yyExpectedTokens[ $state ];
        if (isset($res3[ $state ][ $token ])) {
            if ($res3[ $state ][ $token ]) {
                return $expected;
            }
        } else {
            if ($res3[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return $expected;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][1];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[ $this->yyidx ]->stateno,
                        self::$yyRuleInfo[ $yyruleno ][0]);
                    if (isset(self::$yyExpectedTokens[ $nextstate ])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[ $nextstate ]);
                        if (isset($res4[ $nextstate ][ $token ])) {
                            if ($res4[ $nextstate ][ $token ]) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        } else {
                            if ($res4[ $nextstate ][ $token ] =
                                in_array($token, self::$yyExpectedTokens[ $nextstate ], true)) {
                                $this->yyidx = $yyidx;
                                $this->yystack = $stack;
                                return array_unique($expected);
                            }
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][0];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        static $res = array();
        static $res2 = array();
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[ $this->yyidx ]->stateno;
        if (isset($res[ $state ][ $token ])) {
            if ($res[ $state ][ $token ]) {
                return true;
            }
        } else {
            if ($res[ $state ][ $token ] = in_array($token, self::$yyExpectedTokens[ $state ], true)) {
                return true;
            }
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[ $yyruleno ][1];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[ $this->yyidx ]->stateno,
                        self::$yyRuleInfo[ $yyruleno ][0]);
                    if (isset($res2[ $nextstate ][ $token ])) {
                        if ($res2[ $nextstate ][ $token ]) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    } else {
                        if ($res2[ $nextstate ][ $token ] = (isset(self::$yyExpectedTokens[ $nextstate ]) &&
                                                             in_array($token,
                                                                      self::$yyExpectedTokens[ $nextstate ],
                                                                      true))) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return true;
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[ $yyruleno ][0];
                        $this->yystack[ $this->yyidx ] = $x;
                        continue 2;
                    } else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } else if ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[ $this->yyidx ]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[ $stateno ])) {
            // no shift actions
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_shift_ofst[ $stateno ];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[ $i ] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[ $iLookAhead ]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE,
                           $this->yyTracePrompt . "FALLBACK " .
                           $this->yyTokenName[ $iLookAhead ] . " => " .
                           $this->yyTokenName[ $iFallback ] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[ $stateno ])) {
            return self::$yy_default[ $stateno ];
        }
        $i = self::$yy_reduce_ofst[ $stateno ];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[ $stateno ];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[ $i ] != $iLookAhead) {
            return self::$yy_default[ $stateno ];
        } else {
            return self::$yy_action[ $i ];
        }
    }

    #line 220 "../smarty/lexer/smarty_internal_templateparser.y"

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 207 "../smarty/lexer/smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        $this->yystack[] = $yytos;
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE,
                    "%sShift %d\n",
                    $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE,
                        " %s",
                        $this->yyTokenName[ $this->yystack[ $i ]->major ]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    #line 230 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r0()
    {
        $this->root_buffer->prepend_array($this, $this->template_prefix);
        $this->root_buffer->append_array($this, $this->template_postfix);
        $this->_retvalue = $this->root_buffer->to_smarty_php($this);
    }

    #line 237 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r1()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 251 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r2()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 262 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $this->_retvalue = $this->mergePrefixCode($this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 266 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r5()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Text($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 277 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r6()
    {
        $code = $this->compiler->compileTag('private_php',
                                            array(array('code' => $this->yystack[ $this->yyidx + 0 ]->minor),
                                                  array('type' => $this->lex->phpType)),
                                            array());
        if ($this->compiler->has_code && !empty($code)) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue =
                new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $code, true));
        } else {
            $this->_retvalue = null;
        }
    }

    #line 281 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r7()
    {
        $this->_retvalue = $this->compiler->processText($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 285 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r8()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 290 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r9()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 294 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r10()
    {
        $this->strip = true;
    }

    #line 299 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r11()
    {
        $this->strip = false;
    }

    #line 303 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r12()
    {
        $this->_retvalue = '';
    }

    #line 307 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r13()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 323 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r14()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 329 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r18()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 339 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r19()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' $');
        if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array('nocache'),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $match[1] .
                                                                                                             '\'')));
        } else {
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->compiler->compileVariable('\'' .
                                                                                                             $var .
                                                                                                             '\'')));
        }
    }

    #line 343 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r20()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       array(),
                                                       array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 366 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r21()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('value' => $this->yystack[ $this->yyidx + -1 ]->minor));
    }

    #line 374 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r26()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array(array('value' => $this->yystack[ $this->yyidx +
                                                                                              0 ]->minor),
                                                             array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          -2 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 378 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          -1 ]->minor),
                                                                         array('var' => '\'' .
                                                                                        substr($this->yystack[ $this->yyidx +
                                                                                                               -3 ]->minor,
                                                                                               1) . '\'')),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 383 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r29()
    {
        $this->_retvalue = $this->compiler->compileTag('assign',
                                                       array_merge(array(array('value' => $this->yystack[ $this->yyidx +
                                                                                                          -1 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor['var'])),
                                                                   $this->yystack[ $this->yyidx + 0 ]->minor),
                                                       array('smarty_internal_index' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor['smarty_internal_index']));
    }

    #line 405 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r30()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length));
        if ($tag == 'strip') {
            $this->strip = true;
            $this->_retvalue = null;;
        } else {
            if (defined($tag)) {
                if ($this->security) {
                    $this->security->isTrustedConstant($tag, $this->compiler);
                }
                $this->_retvalue =
                    $this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
            } else {
                if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
                    $this->_retvalue = $this->compiler->compileTag($match[1], array("'nocache'"));
                } else {
                    $this->_retvalue = $this->compiler->compileTag($tag, array());
                }
            }
        }
    }

    #line 415 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r31()
    {
        if (defined($this->yystack[ $this->yyidx + -1 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -1 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value' => $this->yystack[ $this->yyidx +
                                                                                            -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor);
        }
    }

    #line 428 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r32()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           array(),
                                                           array('value' => $this->yystack[ $this->yyidx + 0 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor, array());
        }
    }

    #line 440 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r33()
    {
        if (defined($this->yystack[ $this->yyidx + -2 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + -2 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression',
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('value'        => $this->yystack[ $this->yyidx +
                                                                                                   -2 ]->minor,
                                                                 'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor,
                                                           $this->yystack[ $this->yyidx + 0 ]->minor,
                                                           array('modifierlist' => $this->yystack[ $this->yyidx +
                                                                                                   -1 ]->minor));
        }
    }

    #line 445 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r34()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor));
    }

    #line 450 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r35()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -4 ]->minor,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('modifierlist'  => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'object_method' => $this->yystack[ $this->yyidx +
                                                                                                -2 ]->minor));
    }

    #line 455 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r36()
    {
        $this->_retvalue = $this->compiler->compileTag('make_nocache',
                                                       array(array('var' => '\'' . substr($this->yystack[ $this->yyidx +
                                                                                                          0 ]->minor,
                                                                                          1) . '\'')));
    }

    #line 460 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r37()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 465 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r38()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -2 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       $this->yystack[ $this->yyidx + 0 ]->minor,
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor));
    }

    #line 476 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r39()
    {
        $tag = trim(substr($this->yystack[ $this->yyidx + -1 ]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
                                                       array(),
                                                       array('if condition' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 480 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -6 ]->minor),
                                                                         array('ifexp' => $this->yystack[ $this->yyidx +
                                                                                                          -4 ]->minor),
                                                                         array('var' => $this->yystack[ $this->yyidx +
                                                                                                        -2 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       1);
    }

    #line 488 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r42()
    {
        $this->_retvalue = '=' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 492 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r44()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -3 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -1 ]->minor))),
                                                       0);
    }

    #line 497 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('for',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('start' => $this->yystack[ $this->yyidx +
                                                                                                          -5 ]->minor),
                                                                         array('to' => $this->yystack[ $this->yyidx +
                                                                                                       -3 ]->minor),
                                                                         array('step' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))),
                                                       0);
    }

    #line 501 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -3 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor))));
    }

    #line 504 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach',
                                                       array_merge($this->yystack[ $this->yyidx + 0 ]->minor,
                                                                   array(array('from' => $this->yystack[ $this->yyidx +
                                                                                                         -5 ]->minor),
                                                                         array('item' => $this->yystack[ $this->yyidx +
                                                                                                         -1 ]->minor),
                                                                         array('key' => $this->yystack[ $this->yyidx +
                                                                                                        -3 ]->minor))));
    }

    #line 509 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 513 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r49()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                        -1 ]->minor),
                                                                                                  $this->yystack[ $this->yyidx +
                                                                                                                  0 ]->minor))));
    }

    #line 518 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r50()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter',
                                                       array(),
                                                       array('modifier_list' => array_merge(array(array_merge(array($this->yystack[ $this->yyidx +
                                                                                                                                    -2 ]->minor),
                                                                                                              $this->yystack[ $this->yyidx +
                                                                                                                              -1 ]->minor)),
                                                                                            $this->yystack[ $this->yyidx +
                                                                                                            0 ]->minor)));
    }

    #line 531 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r51()
    {
        $j = strrpos($this->yystack[ $this->yyidx + 0 ]->minor, '.');
        if ($this->yystack[ $this->yyidx + 0 ]->minor[ $j + 1 ] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = $this->compiler->compileTag('block_child', array());;
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = $this->compiler->compileTag('block_parent', array());;
        }
    }

    #line 540 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r52()
    {
        $tag =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' /');
        if ($tag == 'strip') {
            $this->strip = false;
            $this->_retvalue = null;
        } else {
            $this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
        }
    }

    #line 544 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r53()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + 0 ]->minor . 'close', array());
    }

    #line 549 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r54()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -1 ]->minor . 'close',
                                                       array(),
                                                       array('modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 553 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r55()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -2 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 561 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[ $this->yyidx + -3 ]->minor . 'close',
                                                       array(),
                                                       array('object_method' => $this->yystack[ $this->yyidx +
                                                                                                -1 ]->minor,
                                                             'modifier_list' => $this->yystack[ $this->yyidx +
                                                                                                0 ]->minor));
    }

    #line 567 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r57()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
        $this->_retvalue[] = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 572 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r58()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 577 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r59()
    {
        $this->_retvalue = array();
    }

    #line 588 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r60()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
        } else {
            $this->_retvalue =
                array($this->yystack[ $this->yyidx + -2 ]->minor => '\'' . $this->yystack[ $this->yyidx + 0 ]->minor .
                                                                    '\'');
        }
    }

    #line 596 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r61()
    {
        $this->_retvalue =
            array(trim($this->yystack[ $this->yyidx + -1 ]->minor, " =\n\r\t") => $this->yystack[ $this->yyidx +
                                                                                                  0 ]->minor);
    }

    #line 608 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r63()
    {
        $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
    }

    #line 621 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r66()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -2 ]->minor => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 626 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r68()
    {
        $this->yystack[ $this->yyidx + -2 ]->minor[] = $this->yystack[ $this->yyidx + 0 ]->minor;
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor;
    }

    #line 633 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r69()
    {
        $this->_retvalue = array('var'   => '\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '\'',
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 657 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r71()
    {
        $this->_retvalue = array('var'   => $this->yystack[ $this->yyidx + -2 ]->minor,
                                 'value' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 662 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r75()
    {
        $this->_retvalue =
            '$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[ $this->yyidx + -2 ]->minor, 1) . '://' .
            $this->yystack[ $this->yyidx + 0 ]->minor . '\')';
    }

    #line 676 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r76()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . trim($this->yystack[ $this->yyidx + -1 ]->minor) .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 682 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r79()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier',
                                                       array(),
                                                       array('value'        => $this->yystack[ $this->yyidx +
                                                                                               -1 ]->minor,
                                                             'modifierlist' => $this->yystack[ $this->yyidx +
                                                                                               0 ]->minor));
    }

    #line 686 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r80()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -1 ]->minor['pre'] . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + -1 ]->minor['op'] . $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 690 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r81()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 694 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r82()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 698 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r83()
    {
        $this->_retvalue =
            'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor .
            ')';
    }

    #line 706 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r84()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[ $this->yyidx + -2 ]->minor . ',(array)' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ')';
    }

    #line 710 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r85()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
                                                                                                                 substr($this->yystack[ $this->yyidx +
                                                                                                                                        -2 ]->minor,
                                                                                                                        1) .
                                                                                                                 '\'') .
                           ' : ' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 725 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r86()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -5 ]->minor . ' ? ' . $this->yystack[ $this->yyidx + -2 ]->minor . ' : ' .
            $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 746 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r89()
    {
        $this->_retvalue = '!' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 750 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r94()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 754 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r95()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.';
    }

    #line 759 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r96()
    {
        $this->_retvalue = '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 776 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r97()
    {
        if (defined($this->yystack[ $this->yyidx + 0 ]->minor)) {
            if ($this->security) {
                $this->security->isTrustedConstant($this->yystack[ $this->yyidx + 0 ]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = '\'' . $this->yystack[ $this->yyidx + 0 ]->minor . '\'';
        }
    }

    #line 780 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r99()
    {
        $this->_retvalue = "(" . $this->yystack[ $this->yyidx + -1 ]->minor . ")";
    }

    #line 798 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r100()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + -1 ]->minor .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 809 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r104()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        if ($this->yystack[ $this->yyidx + -2 ]->minor['var'] == '\'smarty\'') {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileTag('private_special_variable',
                                                                          array(),
                                                                          $this->yystack[ $this->yyidx +
                                                                                          -2 ]->minor['smarty_internal_index']) .
                                              ';?>');
        } else {
            $this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
                                              $this->compiler->compileVariable($this->yystack[ $this->yyidx +
                                                                                               -2 ]->minor['var']) .
                                              $this->yystack[ $this->yyidx + -2 ]->minor['smarty_internal_index'] .
                                              ';?>');
        }
        $this->_retvalue = $prefixVar . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[0] .
                           $this->yystack[ $this->yyidx + 0 ]->minor[1];
    }

    #line 826 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r105()
    {
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php $prefixVar" . '=ob_get_clean();?>'));
        $this->_retvalue = $prefixVar;
    }

    #line 845 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r108()
    {
        if (!in_array(strtolower($this->yystack[ $this->yyidx + -2 ]->minor), array('self', 'parent')) &&
            (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[ $this->yyidx + -2 ]->minor,
                                                                             $this->yystack[ $this->yyidx + 0 ]->minor,
                                                                             $this->compiler))) {
            if (isset($this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ])) {
                $this->_retvalue =
                    $this->smarty->registered_classes[ $this->yystack[ $this->yyidx + -2 ]->minor ] . '::' .
                    $this->yystack[ $this->yyidx + 0 ]->minor[0] . $this->yystack[ $this->yyidx + 0 ]->minor[1];
            } else {
                $this->_retvalue =
                    $this->yystack[ $this->yyidx + -2 ]->minor . '::' . $this->yystack[ $this->yyidx + 0 ]->minor[0] .
                    $this->yystack[ $this->yyidx + 0 ]->minor[1];
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                    "' is undefined or not allowed by security setting");
        }
    }

    #line 856 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r110()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 859 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r111()
    {
        $this->_retvalue =
            $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'');
    }

    #line 872 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r112()
    {
        if ($this->yystack[ $this->yyidx + 0 ]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable',
                                                      array(),
                                                      $this->yystack[ $this->yyidx +
                                                                      0 ]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current
            $this->last_variable = $this->yystack[ $this->yyidx + 0 ]->minor['var'];
            $this->last_index = $this->yystack[ $this->yyidx + 0 ]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor['var']) .
                               $this->yystack[ $this->yyidx + 0 ]->minor['smarty_internal_index'];
        }
    }

    #line 882 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r113()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[ $this->yyidx + -2 ]->minor . ']->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 886 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r115()
    {
        $this->_retvalue =
            $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + -1 ]->minor . "'");
    }

    #line 890 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r116()
    {
        $this->_retvalue = '(is_array($tmp = ' .
                           $this->compiler->compileConfigVariable("'" . $this->yystack[ $this->yyidx + -2 ]->minor .
                                                                  "'") . ') ? $tmp' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ' :null)';
    }

    #line 894 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r117()
    {
        $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 898 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r118()
    {
        $this->_retvalue =
            '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[ $this->yyidx + -2 ]->minor) .
            ') ? $tmp' . $this->yystack[ $this->yyidx + 0 ]->minor . ' : null)';
    }

    #line 901 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r119()
    {
        $this->_retvalue = array('var'                   => '\'' .
                                                            substr($this->yystack[ $this->yyidx + -1 ]->minor, 1) .
                                                            '\'',
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 914 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r120()
    {
        $this->_retvalue = array('var'                   => $this->yystack[ $this->yyidx + -1 ]->minor,
                                 'smarty_internal_index' => $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 920 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r122()
    {
        return;
    }

    #line 923 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r123()
    {
        $this->_retvalue =
            '[' . $this->compiler->compileVariable('\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'') .
            ']';
    }

    #line 927 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r124()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + 0 ]->minor) . ']';
    }

    #line 931 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r125()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -2 ]->minor) . '->' .
                           $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 935 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r126()
    {
        $this->_retvalue = "['" . $this->yystack[ $this->yyidx + 0 ]->minor . "']";
    }

    #line 940 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r127()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + 0 ]->minor . ']';
    }

    #line 945 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r128()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 949 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r129()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor .
                                                             '\'][\'index\']') . ']';
    }

    #line 952 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r130()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
                                                             array(),
                                                             '[\'section\'][\'' .
                                                             $this->yystack[ $this->yyidx + -3 ]->minor . '\'][\'' .
                                                             $this->yystack[ $this->yyidx + -1 ]->minor . '\']') . ']';
    }

    #line 958 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r131()
    {
        $this->_retvalue = '[' . $this->yystack[ $this->yyidx + -1 ]->minor . ']';
    }

    #line 974 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r133()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
                                                                  substr($this->yystack[ $this->yyidx + -1 ]->minor,
                                                                         1) . '\'') . ']';;
    }

    #line 984 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r137()
    {
        $this->_retvalue = '[]';
    }

    #line 988 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r138()
    {
        $this->_retvalue = '\'' . substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) . '\'';
    }

    #line 993 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r139()
    {
        $this->_retvalue = "''";
    }

    #line 1001 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r140()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . '.' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1007 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r142()
    {
        $var =
            trim(substr($this->yystack[ $this->yyidx + 0 ]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
                 ' $');
        $this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
    }

    #line 1014 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r143()
    {
        $this->_retvalue = '(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1023 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r144()
    {
        if ($this->yystack[ $this->yyidx + -1 ]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable',
                                                           array(),
                                                           $this->yystack[ $this->yyidx +
                                                                           -1 ]->minor['smarty_internal_index']) .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor['var']) .
                               $this->yystack[ $this->yyidx + -1 ]->minor['smarty_internal_index'] .
                               $this->yystack[ $this->yyidx + 0 ]->minor;
        }
    }

    #line 1028 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r145()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1033 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r146()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1040 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r147()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -1 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue =
            '->' . $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1047 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r148()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[ $this->yyidx + -1 ]->minor) .
                           $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1054 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r149()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{' . $this->yystack[ $this->yyidx + -2 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1062 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r150()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue =
            '->{\'' . $this->yystack[ $this->yyidx + -4 ]->minor . '\'.' . $this->yystack[ $this->yyidx + -2 ]->minor .
            $this->yystack[ $this->yyidx + 0 ]->minor . '}';
    }

    #line 1070 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r151()
    {
        $this->_retvalue = '->' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1078 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r152()
    {
        $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[ $this->yyidx + -3 ]->minor,
                                                                   $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1085 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r153()
    {
        if ($this->security && substr($this->yystack[ $this->yyidx + -3 ]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[ $this->yyidx + -3 ]->minor . "(" .
                           implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ")";
    }

    #line 1096 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r154()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $prefixVar = $this->compiler->getNewPrefixVariable();
        $this->compiler->appendPrefixCode("<?php $prefixVar" . '=' . $this->compiler->compileVariable('\'' .
                                                                                                      substr($this->yystack[ $this->yyidx +
                                                                                                                             -3 ]->minor,
                                                                                                             1) .
                                                                                                      '\'') . ';?>');
        $this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[ $this->yyidx + -1 ]->minor) . ')';
    }

    #line 1113 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r155()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -2 ]->minor, array($this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1117 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r158()
    {
        $this->_retvalue = array_merge($this->yystack[ $this->yyidx + -2 ]->minor,
                                       array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor,
                                                         $this->yystack[ $this->yyidx + 0 ]->minor)));
    }

    #line 1125 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r159()
    {
        $this->_retvalue =
            array(array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor));
    }

    #line 1133 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r161()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1152 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r162()
    {
        $this->_retvalue =
            array_merge($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1157 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r166()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '', 'method');
    }

    #line 1162 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r167()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'method');
    }

    #line 1167 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r168()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + 0 ]->minor, '');
    }

    #line 1172 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r169()
    {
        $this->_retvalue =
            array($this->yystack[ $this->yyidx + -1 ]->minor, $this->yystack[ $this->yyidx + 0 ]->minor, 'property');
    }

    #line 1178 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r170()
    {
        $this->_retvalue = array($this->yystack[ $this->yyidx + -2 ]->minor,
                                 $this->yystack[ $this->yyidx + -1 ]->minor . $this->yystack[ $this->yyidx + 0 ]->minor,
                                 'property');
    }

    #line 1182 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r171()
    {
        $this->_retvalue = ' ' . trim($this->yystack[ $this->yyidx + 0 ]->minor) . ' ';
    }

    #line 1201 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r172()
    {
        static $lops = array(
            'eq'  => ' == ',
            'ne'  => ' != ',
            'neq' => ' != ',
            'gt'  => ' > ',
            'ge'  => ' >= ',
            'gte' => ' >= ',
            'lt'  => ' < ',
            'le'  => ' <= ',
            'lte' => ' <= ',
            'mod' => ' % ',
            'and' => ' && ',
            'or'  => ' || ',
            'xor' => ' xor ',
        );
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $lops[ $op ];
    }

    #line 1214 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r173()
    {
        static $tlops = array(
            'isdivby'     => array('op' => ' % ', 'pre' => '!('),
            'isnotdivby'  => array('op' => ' % ', 'pre' => '('),
            'isevenby'    => array('op' => ' / ', 'pre' => '!(1 & '),
            'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
            'isoddby'     => array('op' => ' / ', 'pre' => '(1 & '),
            'isnotoddby'  => array('op' => ' / ', 'pre' => '!(1 & '),
        );
        $op = strtolower(preg_replace('/\s*/', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $tlops[ $op ];
    }

    #line 1228 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r174()
    {
        static $scond = array(
            'iseven'    => '!(1 & ',
            'isnoteven' => '(1 & ',
            'isodd'     => '(1 & ',
            'isnotodd'  => '!(1 & ',
        );
        $op = strtolower(str_replace(' ', '', $this->yystack[ $this->yyidx + 0 ]->minor));
        $this->_retvalue = $scond[ $op ];
    }

    #line 1236 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r175()
    {
        $this->_retvalue = 'array(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')';
    }

    #line 1244 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r177()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -2 ]->minor . ',' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1248 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r179()
    {
        $this->_retvalue =
            $this->yystack[ $this->yyidx + -2 ]->minor . '=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1264 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r180()
    {
        $this->_retvalue =
            '\'' . $this->yystack[ $this->yyidx + -2 ]->minor . '\'=>' . $this->yystack[ $this->yyidx + 0 ]->minor;
    }

    #line 1269 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r183()
    {
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor->to_smarty_php($this);
    }

    #line 1274 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r184()
    {
        $this->yystack[ $this->yyidx + -1 ]->minor->append_subtree($this, $this->yystack[ $this->yyidx + 0 ]->minor);
        $this->_retvalue = $this->yystack[ $this->yyidx + -1 ]->minor;
    }

    #line 1278 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r185()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    #line 1286 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r186()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[ $this->yyidx + -1 ]->minor);
    }

    #line 1294 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r188()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
                                                              substr($this->yystack[ $this->yyidx + 0 ]->minor, 1) .
                                                              '\']->value');
    }

    #line 1298 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r190()
    {
        $this->_retvalue =
            new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[ $this->yyidx + -1 ]->minor . ')');
    }

    #line 1302 "../smarty/lexer/smarty_internal_templateparser.y"

    function yy_r191()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[ $this->yyidx + 0 ]->minor);
    }

    function yy_r192()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[ $this->yyidx + 0 ]->minor);
    }

    public function yy_reduce($yyruleno)
    {
        if ($this->yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE,
                    "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt,
                    $yyruleno,
                    self::$yyRuleName[ $yyruleno ]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (isset(self::$yyReduceMap[ $yyruleno ])) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[ $yyruleno ]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[ $yyruleno ][0];
        $yysize = self::$yyRuleInfo[ $yyruleno ][1];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[ $this->yyidx ]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[ $this->yyidx ] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } else if ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 200 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 193 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            $this->yystack[] = $x;
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE,
                    "%sInput %s\n",
                    $this->yyTracePrompt,
                    $this->yyTokenName[ $yymajor ]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } else if ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } else if ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE,
                            "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[ $this->yyidx ]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE,
                                    "%sDiscard input token %s\n",
                                    $this->yyTracePrompt,
                                    $this->yyTokenName[ $yymajor ]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                               $yymx != self::YYERRORSYMBOL &&
                               ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } else if ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}

